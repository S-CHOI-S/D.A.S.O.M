// Generated by gencpp from file two_link/param.msg
// DO NOT EDIT!


#ifndef TWO_LINK_MESSAGE_PARAM_H
#define TWO_LINK_MESSAGE_PARAM_H

#include <ros/service_traits.h>


#include <two_link/paramRequest.h>
#include <two_link/paramResponse.h>


namespace two_link
{

struct param
{

typedef paramRequest Request;
typedef paramResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct param
} // namespace two_link


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::two_link::param > {
  static const char* value()
  {
    return "da3e0ad9469889454218ee3b1f92c73a";
  }

  static const char* value(const ::two_link::param&) { return value(); }
};

template<>
struct DataType< ::two_link::param > {
  static const char* value()
  {
    return "two_link/param";
  }

  static const char* value(const ::two_link::param&) { return value(); }
};


// service_traits::MD5Sum< ::two_link::paramRequest> should match
// service_traits::MD5Sum< ::two_link::param >
template<>
struct MD5Sum< ::two_link::paramRequest>
{
  static const char* value()
  {
    return MD5Sum< ::two_link::param >::value();
  }
  static const char* value(const ::two_link::paramRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::two_link::paramRequest> should match
// service_traits::DataType< ::two_link::param >
template<>
struct DataType< ::two_link::paramRequest>
{
  static const char* value()
  {
    return DataType< ::two_link::param >::value();
  }
  static const char* value(const ::two_link::paramRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::two_link::paramResponse> should match
// service_traits::MD5Sum< ::two_link::param >
template<>
struct MD5Sum< ::two_link::paramResponse>
{
  static const char* value()
  {
    return MD5Sum< ::two_link::param >::value();
  }
  static const char* value(const ::two_link::paramResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::two_link::paramResponse> should match
// service_traits::DataType< ::two_link::param >
template<>
struct DataType< ::two_link::paramResponse>
{
  static const char* value()
  {
    return DataType< ::two_link::param >::value();
  }
  static const char* value(const ::two_link::paramResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TWO_LINK_MESSAGE_PARAM_H
